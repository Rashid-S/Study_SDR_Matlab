rtlsdr_fc        = 1200.0e6; % центральная частота в Гц
rtlsdr_gain      = 30;       % усиление в дБ
rtlsdr_fs        = 240e3;    % частота дискретизации 
rtlsdr_ppm       = 47;       % коррекция частоты в ppm
rtlsdr_frmlen    = 256*25;   % размер кадра данных (кратен 5)
rtlsdr_datatype  = 'single'; % тип выходных данных
audio_fs         = 48e3;     % fs файла звукозаписи
sim_time         = 1;        % время моделирования в с
DownsampleFactor = 5;        % коэффициент децимации
rtlsdr_fc = rtlsdr_fc-40e3;  % fc с учетом сдвига 40 кГц
rtlsdr_frmtime = rtlsdr_frmlen/rtlsdr_fs; % время кадра
% системный объект приемника RTL-SDR
obj_rtlsdr = comm.SDRRTLReceiver(...
    'CenterFrequency', rtlsdr_fc,...
    'EnableTunerAGC', false,...
    'TunerGain', rtlsdr_gain,...
    'SampleRate', rtlsdr_fs, ...
    'SamplesPerFrame', rtlsdr_frmlen,...
    'OutputDataType', rtlsdr_datatype,...
    'FrequencyCorrection', rtlsdr_ppm);
% системный объект фильтра-дециматора
obj_decmtr = dsp.FIRDecimator(...
    'DecimationFactor', DownsampleFactor,...
    'Numerator',...
    firpm(100, [0 15e3 20e3 (240e3/2)]/(240e3/2),...
                [1 1 0 0], [1 1], 20));
% системный объект полосового фильтра
obj_bpf = dsp.FIRFilter('Numerator',...
    firpm(50,[0,20e3,25e3,55e3,60e3,240e3/2]/(240e3/2),...
                [0 0 1 1 0 0],[1 1 1],20));
% системный объект проигрывателя звукозаписи
obj_audio = audioDeviceWriter(audio_fs);   
% объект анализатора спектра модулированного сигнала
obj_spectrummod   = dsp.SpectrumAnalyzer(...
    'Name', 'НЧ модулированный АМ сигнал на ПЧ',...
    'Title', 'НЧ модулированный АМ сигнал на ПЧ',...
    'SpectrumType', 'Power density',...
    'FrequencySpan', 'Full',...
    'ShowLegend', true,...
    'SampleRate', rtlsdr_fs);
% объект анализатора спектра демодулированного сигнала
obj_spectrumdemod = dsp.SpectrumAnalyzer(...
    'Name', 'Демодулированный информационный сигнал на 0Ч',...
    'Title','Демодулированный информационный сигнал на 0Ч',...
    'SpectrumType', 'Power density',...
    'FrequencySpan', 'Full',...
    'SampleRate', audio_fs);
% системный объект осциллографов для отображения
% модулированного АМ сигнала на ПЧ 40 кГц и его НЧ огибающей
scope1 = dsp.TimeScope( ...
  'NumInputPorts',2, ...
  'Name','Детектирование комплексной огибающей', ...
  'SampleRate',[rtlsdr_fs,audio_fs], ...
  'TimeDisplayOffset',[50/rtlsdr_fs,0],...
  'TimeSpanSource','Property', ...
  'TimeSpan',2, ...
  'YLimits',[-1 1]);
run_time = 0; % инициализация времени моделирования
while run_time < sim_time % цикл приема
    rtlsdr_data = obj_rtlsdr(); % прием кадра данных
    % полосовая фильтрация НЧ 
    % модулированного АМ сигнала на ПЧ 40 кГц
    data_bpf = obj_bpf(rtlsdr_data);
    % отображение спектров модулированного 
    % АМ сигнала на ПЧ до и после полосовой фильтрации
    obj_spectrummod([rtlsdr_data,data_bpf]);
    % детектор комплексной огибающей 
    % на основе преобразования Гильберта
    env_mag = abs(data_bpf);
    data_dec = obj_decmtr(env_mag);
    % спектр НЧ демодулированного сигнала на 0Ч
    obj_spectrumdemod(data_dec);
    % НЧ модулированный АМ сигнал на ПЧ и его НЧ огибающая
    scope1(real(data_bpf),data_dec);
    % проигрывние демодулированной звукозаписи
    obj_audio(data_dec);
    % инкремент времени моделирование длительностью кадра
    run_time = run_time + rtlsdr_frmtime;
end