% Инициализация параметров 
Fs = 22050;            % частота дискретизации Fs
numSamples = 10000;    % число выборок
DownsampleFactor = 15; % коэффициент понижения Fs
frameSize = 10*DownsampleFactor; % размер кадра
% создание системного объекта dsp.SineWave для 
% формирования двух гармонических сигналов: 
% НЧ тонального сигнала и ВЧ сигнала несущей АМ
sine = dsp.SineWave([0.4 1],[10 200], ...
    'SamplesPerFrame',frameSize, ...
    'SampleRate',Fs);
% создание системного объекта для первого метода: 
% ФНЧ для НЧ фильтрации после возведение в квадрат 
lp1 = dsp.FIRFilter('Numerator',...
    firpm(20,[0 0.03 0.1 1],[1 1 0 0]));
% создание системных объектов для второго метода: 
% фильтра Гильберта, линии задержки 
% и ФНЧ для детектирования огибающей
N = 60; % порядок фильтра Гильберта
hilbertTransformer = dsp.FIRFilter('Numerator',...
    firpm(N,[0.01 .95],[1 1],'hilbert'));
delay = dsp.Delay('Length',N/2);
lp2 = dsp.FIRFilter('Numerator',...
    firpm(20,[0 0.03 0.1 1],[1 1 0 0]));
% создание системных объектов осциллографов 
% для отображения входного ВЧ радиосигнала 
% и его НЧ огибающей для метода 1
scope1 = dsp.TimeScope( ...
  'NumInputPorts',2, ...
  'Name','Детектирование возведением в квадрат и ФНЧ', ...
  'SampleRate',[Fs,Fs/DownsampleFactor], ...
  'TimeDisplayOffset',[(N/2+frameSize)/Fs,0], ...
  'TimeSpanSource','Property', ...
  'TimeSpan',0.45, ...
  'YLimits',[-2.5 2.5]);
pos = scope1.Position;
% создание системных объектов осциллографов для отображения
% входного ВЧ радиосигнала и его НЧ огибающей для метода 2
scope2 = dsp.TimeScope( ...
  'NumInputPorts',2, ...
  'Name','Детектирование преобразованием Гильберта', ...
  'Position',[pos(1)+pos(3),pos(2:4)], ...
  'SampleRate',[Fs,Fs/DownsampleFactor], ...
  'TimeDisplayOffset',[(N/2+frameSize)/Fs,0], ...
  'TimeSpanSource','Property', ...
  'TimeSpan',0.45, ...
  'YLimits',[-2.5 2.5]);
% цикл обработки
for i = 1:numSamples/frameSize
    sig = sine();
    sig = (1 + sig(:,1)) .* sig(:, 2); % АМ
    % Метод 1: возведение в квадрат и НЧ фильтрация
    sigsq = 2 * sig .* sig;
    sigenv1 = sqrt(lp1(downsample(sigsq,DownsampleFactor)));
    % Метод 2: на основе преобразования Гильберта
    sige = abs(complex(0, hilbertTransformer(sig)) + delay(sig));
    sigenv2 = lp2(downsample(sige,DownsampleFactor));
    % отображение входного ВЧ радиосигнала и его НЧ огибающей
    scope1(sig,sigenv1);
    scope2(sig,sigenv2);
end